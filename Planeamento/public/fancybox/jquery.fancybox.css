 // Adiciona um evento de clique a cada imagem da galeria
document.querySelectorAll('.gallery img').forEach(img => {
  img.addEventListener('click', () => {
    openImageViewer(img.src);
  });
});

// Função para abrir o visualizador de imagens
function openImageViewer(imageSrc) {
  // Cria o contêiner do visualizador
  const viewer = document.createElement('div');
  viewer.style.position = 'fixed';
  viewer.style.top = '0';
  viewer.style.left = '0';
  viewer.style.width = '100%';
  viewer.style.height = '100%';
  viewer.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
  viewer.style.display = 'flex';
  viewer.style.justifyContent = 'center';
  viewer.style.alignItems = 'center';
  viewer.style.zIndex = '9999';

  // Cria a imagem dentro do contêiner
  const img = document.createElement('img');
  img.src = imageSrc;
  img.style.maxWidth = '90%';
  img.style.maxHeight = '90%';

  // Adiciona a imagem ao contêiner
  viewer.appendChild(img);

  // Adiciona o contêiner ao corpo do documento
  document.body.appendChild(viewer);

  // Inicializa o plugin mediumZoom
  const zoom = mediumZoom(img);

  // Adiciona um evento de clique para fechar o visualizador
  viewer.addEventListener('click', () => {
    document.body.removeChild(viewer);
    zoom.detach();
  });
}

// Seleciona todos os elementos com a classe 'gallery-item'
const galleryItems = document.querySelectorAll('.gallery-item');

// Itera sobre cada elemento
galleryItems.forEach(item => {
  // Adiciona o evento de clique
  item.addEventListener('click', () => {
    // Obtém o atributo 'onclick' do elemento
    const onclickValue = item.getAttribute('onclick');

    // Verifica se o atributo 'onclick' existe
    if (onclickValue) {
      // Executa a função especificada no atributo 'onclick'
      eval(onclickValue);
    }
  });
});


/*--------------------------------------------*/


function openPhotoGallery(event) {
  const galleryItem = event.currentTarget;
  const imagePath = galleryItem.querySelector('img').src;

  // Abre um novo separador com a imagem
  const newTab = window.open(imagePath, '_blank', 'width=800,height=600');
}






function openPhotoGallery(event) {
  const galleryItem = event.currentTarget;
  const imagePath = galleryItem.querySelector('img').src;

  // Abre um novo separador com a imagem
  const newTab = window.open(imagePath, '_blank', 'width=800,height=600');
}

function openPhotoDetails(imagePath, title, relatedPhotos = [], year, responsavel, county, author, description) {
  const newWindow = window.open('', '_blank', 'width=1900,height=900');

  if (newWindow.closed || !newWindow) return;

  const relatedPhotosHTML = relatedPhotos.map(relatedPhoto => `<img src="${relatedPhoto.imagePath}" alt="${relatedPhoto.alt}" class="gallery-image">`).join('');
  const paragraphs = description.split(/[!.?]+/).filter(p => p.trim() !== '');
  const descriptionHTML = paragraphs.map(paragraph => `<p>${paragraph.trim()}.</p>`).join('');

  let htmlContent = `
    <html>
    <head>
      <title>${title}</title>
      <style>
        body {
          margin: 0;
          padding: 20px;
          text-align: center;
          font-family: 'Inter', sans-serif;
          text-align: justify;
          margin: 10px;
        }
       .flex-container {
          display: flex;
        }
       .text-container {
          flex: 1;
          padding: 20px;
        }
      

        
.gallery-container {
  flex: 1;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
  align-items: flex-start;
  margin: 10px;
  

}

.gallery {
  display: flex;
  flex-direction: column;
  align-items: center;
  grid-gap: 0.5em;
}

.gallery-image {
  max-width: 100%;
  cursor: -webkit-zoom-in;
  height: auto;
  cursor: zoom-in;
  transition: transform 0.25s ease;
  space-between: 10px;
  tranform origin: rigth bottom;
  cursor: zoom-in;

}

  .image.zoomed {

  -webkit-transform: scale(30%);
  
  cursor: zoom-in;
  tranformX: 50px;
  transformY: 50px;

}

.gallery-image:hover {
transform: scale(2); /* Aumenta o tamanho da imagem até 8x ao passar o mouse */
  cursor: -webkit-zoom-out;
 transform origin: rigth center;



}
 image-zoomed {
  center: origin;
  position: fixed;
  -webkit-transform: scale(0%);
  cursor: zoom-in;

  tranformX: 50px;
  transformY: 50px;


}


/* Para garantir que a imagem volte ao seu tamanho original quando o mouse sai, podemos adicionar um estado normal ou usar o :not(:hover) */
.gallery-image:not(:hover) {
    transform: scale(1); /* Retorna o tamanho original da imagem */
}
        p {
          line-height: 1.5;
        }
       .author { font-style: italic; font-size: 0.9em; color: #666; }
       .title { font-weight: bold; font-size: 2em; color: #333; }
       .year { font-size: 0.8em; color: #666; }
       .responsavel { font-style: italic; font-size: 0.9em; color: #666; }
       .county { font-size: 0.8em; color: #666; }
       .description { font-size: 1em; color: #333; padding: 1em; border: 1px solid #ddd; border-radius: 5px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); }
      </style>
      <script>
        document.addEventListener('DOMContentLoaded', function() {
          const images = document.querySelectorAll('.gallery-image');
          images.forEach(img => {
            img.addEventListener('click', function() {
              this.classList.toggle('zoomed');
              document.addEventListener('DOMContentLoaded', function() {
  const images = document.querySelectorAll('.gallery-image');

  images.forEach(img => {
    let isZooming = false;

    img.addEventListener('mousedown', function(e) {
      e.preventDefault(); // Evita o comportamento padrão do mouse
      isZooming = true;
      this.classList.add('zoomed');
    });

    img.addEventListener('mouseup', function() {
      isZooming = false;
      this.classList.remove('zoomed');
    });

    img.addEventListener('mouseleave', function() {
      isZooming = false;
      this.classList.remove('zoomed');

      document.addEventListener('DOMContentLoaded', function() {
    mediumZoom('.gallery-image');

            });
          });
        });
      </script>
    </head>
    <body>
      <div class="flex-container">
        <div class="text-container">
          <h2 class="title">${title}</h2>
          <p>Ano: <span class="year">${year}</span></p>
          <p>Responsável do Projeto: <span class="responsavel">${responsavel}</span></p>
          <p>Concelho: <span class="county">${county}</span></p>
          <p>Autor: <span class="author">${author}</span></p>
          <p class="description">${descriptionHTML}</p>
        </div>
        <div class="gallery-container">
          <div class="gallery">
            <img src="${imagePath}" alt="${title}" class="gallery-image">
            ${relatedPhotosHTML}
          </div>
        </div>
      </div>
    </body>
  `;

  if (!newWindow.document.body.innerHTML.includes(htmlContent)) {
    newWindow.document.write(htmlContent);
  } else {
    console.log("Conteúdo já existente no novo separador.");
  }
}



// Biblioteca Medium Zoom

document.addEventListener('DOMContentLoaded', function () {
  mediumZoom('.gallery-image', {
    margin: 30,
    background: '#000',
    scrollOffset: 40,
    container: null,
    template: null
  });
});

// Adiciona evento de clique à classe .gallery-image
document.querySelectorAll('.gallery-image').forEach((image) => {
  image.addEventListener('click', () => {
    // Abre uma nova janela com a imagem e aplica o zoom
    mediumZoom(image, {
      zoom: 1, // Zoom inicial
      maxZoom: 8, // Zoom máximo
      step: 0.6, // Passo de zoom
    });
  });
});




// Adiciona a função openPhotoViewer
newWindow.openPhotoViewer = openPhotoViewer;


function openPhotoViewer(imagePath) {
  const viewer = document.createElement('div');
  viewer.style.position = 'fixed';
  // ... (restante do código para criar o visualizador)

  const img = document.createElement('img');
  img.src = imagePath;
  img.style.maxWidth = '90%';
  img.style.maxHeight = '90%';

  viewer.appendChild(img);
  document.body.appendChild(viewer);

  const zoom = mediumZoom(img);

  viewer.addEventListener('click', () => {
    document.body.removeChild(viewer);
    zoom.detach();
  });
}



document.querySelectorAll('.gallery__item img').forEach((imgElement) => {
  imgElement.addEventListener('click', () => {
    const imageUrl = imgElement.src;
    openImageInNewTab(imagePath);
  });
});



document.addEventListener('DOMContentLoaded', function () {
  mediumZoom('.gallery-image');
});

// function openImageInNewTab(imagePath) {
//   console.log('openImageInNewTab chamada com', imagePath);

//   const windowWidth = 900;
//   const windowHeight = 900;
//   const left = (screen.width / 2) - (windowWidth / 2);
//   const top = (screen.height / 2) - (windowHeight / 2);

//   const newWindow = window.open(
//     '',
//     '_blank',
//     `width=${windowWidth},height=${windowHeight},left=${left},top=${top}`
//   );

//   if (newWindow) {
//     console.log('Nova janela aberta');

//     const htmlContent = `
//       <!DOCTYPE html>
//       <html>
//         <head>
//           <title>Visualizador de Imagem</title>
//           <style>
//             body {
//               padding-top: 50%;
//               padding-left: 50%;
//               display: flex;
//               justify-content: center;
//               align-items: center;
//               height: 400px;
//               width: 400px;
//               background-color: #000;
//             }
//             img {
//               max-width: 100%;
//               max-height: 100%;
//               cursor: zoom-in;
//             }
//           </style>
//           <script src="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js"></script>
//         </head>
//         <body>
//           <img id="image" src="${imagePath}" alt="Imagem">
//           <script>
//             const image = document.getElementById('image');
//             const zoom = mediumZoom(image, {
//               margin: 48,
//               background: 'rgba(0, 0, 0, 0.8)',
//               scrollOffset: 0,
//               container: null,
//               template: null,
//               zoomActivation: 'click',
//             });
//             image.addEventListener('wheel', (event) => {
//               event.preventDefault();
//               const delta = event.deltaY > 0 ? -0.2 : 0.2;
//               zoom.update({ zoom: zoom.getOptions().zoom + delta });
//             });
//           </script>
//         </body>
//       </html>
//     `;

//     newWindow.document.write(htmlContent);
//     newWindow.document.close();
//   } else {
//     console.log('Falha ao abrir a nova janela');
//   }
// }

// document.addEventListener('DOMContentLoaded', function() {
//   const galleryImages = document.querySelectorAll('.gallery-image');

//   galleryImages.forEach((image) => {
//     image.addEventListener('click', () => {
//       openImageInNewTab(image.src);
//     });
//   });
// });


// function openImageInNewTab(imagePath) {
//   console.log('openImageInNewTab chamada com', imagePath);

//   const windowWidth = 600;
//   const windowHeight = 600;
//   const left = (screen.width / 2) - (windowWidth / 2);
//   const top = (screen.height / 2) - (windowHeight / 2);

//   const newWindow = window.open(
//     '',
//     '_blank',
//     `width=${windowWidth},height=${windowHeight},left=${left},top=${top}`
//   );

//   if (newWindow) {
//     console.log('Nova janela aberta');

//     const htmlContent = `
//       <!DOCTYPE html>
//       <html>
//         <head>
//           <title>Visualizador de Imagem</title>
//           <style>
//             body {
//               padding: 0;
//               margin: 0;
//               display: flex;
//               justify-content: center;
//               align-items: center;
//               height: 100vh;
//               width: 100vw;
//               background-color: #000;
//             }
//             img {
//               max-width: 100%;
//               max-height: 100%;
//               cursor: zoom-in;
//             }
//           </style>
//           <script src="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js"></script>
//         </head>
//         <body>
//           <img id="image" src="${imagePath}" alt="Imagem">
//           <script>
//             const image = document.getElementById('image');
//             const zoom = mediumZoom(image, {
//               margin: 48,
//               background: 'rgba(0, 0, 0, 0.8)',
//               scrollOffset: 0,
//               container: null,
//               template: null,
//               zoomActivation: 'click',
//             });
//             image.addEventListener('wheel', (event) => {
//               event.preventDefault();
//               const delta = event.deltaY > 0 ? -0.2 : 0.2;
//               zoom.update({ zoom: zoom.getOptions().zoom + delta });
//             });
//           </script>
//         </body>
//       </html>
//     `;

//     newWindow.document.write(htmlContent);
//     newWindow.document.close();
//   } else {
//     console.log('Falha ao abrir a nova janela');
//   }
// }

// document.addEventListener('DOMContentLoaded', function() {
//   const galleryImages = document.querySelectorAll('.gallery-image');

//   galleryImages.forEach((image) => {
//     image.addEventListener('click', () => {
//       openImageInNewTab(image.src);
//     });
//   });
// });



// function openImageInNewTab(imagePath) {
//   console.log('openImageInNewTab chamada com', imagePath);

//   const windowWidth = 600;
//   const windowHeight = 600;
//   const left = (screen.width / 2) - (windowWidth / 2);
//   const top = (screen.height / 2) - (windowHeight / 2);

//   const newWindow = window.open(
//     '',
//     '_blank',
//     `width=${windowWidth},height=${windowHeight},left=${left},top=${top}`
//   );

//   if (newWindow) {
//     console.log('Nova janela aberta');

//     const htmlContent = `
//       <!DOCTYPE html>
//       <html>
//         <head>
//           <title>Visualizador de Imagem</title>
//           <style>
//             body {
//               padding: 0;
//               margin: 0;
//               display: flex;
//               justify-content: center;
//               align-items: center;
//               height: 100vh;
//               width: 100vw;
//               background-color: #000;
//             }
//             img {
//               max-width: 100%;
//               max-height: 100%;
//               cursor: zoom-in;
//             }
//           </style>
//           <script src="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js"></script>
//         </head>
//         <body>
//           <img id="image" src="${imagePath}" alt="Imagem">
//           <script>
//             const image = document.getElementById('image');
//             const zoom = mediumZoom(image, {
//               top: 0,
//               left: 400,
//               margin: 48,
//               background: 'rgba(0, 0, 0, 0.8)',
//               scrollOffset: 0,
//               container: null,
//               template: null,
//               zoomActivation: 'click',
//             });

//             // Adiciona evento de clique para zoom
//             image.addEventListener('click', () => {
//               zoom.toggle();
//             });

//             // Adiciona evento de rolo do mouse para zoom
//             image.addEventListener('wheel', (event) => {
//               event.preventDefault();
//               const delta = event.deltaY > 0 ? -0.2 : 0.2;
//               zoom.update({ zoom: zoom.getOptions().zoom + delta });
//             });
//           </script>
//         </body>
//       </html>
//     `;

//     newWindow.document.write(htmlContent);
//     newWindow.document.close();
//   } else {
//     console.log('Falha ao abrir a nova janela');
//   }
// }

// document.addEventListener('DOMContentLoaded', function() {
//   const galleryImages = document.querySelectorAll('.gallery-image');

//   galleryImages.forEach((image) => {
//     image.addEventListener('click', () => {
//       openImageInNewTab(image.src);
//     });
//   });
// });








// function openImageInNewTab(imagePath) {
//   console.log('openImageInNewTab chamada com', imagePath);

//   const windowWidth = 600;
//   const windowHeight = 600;
//   const left = (screen.width / 2) - (windowWidth / 2);
//   const top = (screen.height / 2) - (windowHeight / 2);

//   const newWindow = window.open(
//     '',
//     '_blank',
//     `width=${windowWidth},height=${windowHeight},left=${left},top=${top}`
//   );

//   if (newWindow) {
//     console.log('Nova janela abe